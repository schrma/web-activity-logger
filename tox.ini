# Tox configuration file
# Read more under https://tox.wiki/

[tox]
minversion = 4.11.13
isolated_build = True


[testenv]
description = Pipenv for running all kind of tools
deps = pipenv
envdir = {toxworkdir}/.venv-pipenv
passenv =
    HOME
    PIPENV_USERNAME
    PIPENV_TOKEN
    TEAMCITY_VERSION
setenv =
    TOXINIDIR = {toxinidir}
    PIPENV_VERBOSITY=-1
    PACKAGE_SOURCE_DIR = src/activity_logger/
    PIPENV_IGNORE_VIRTUALENVS=1
    PIPENV_VENV_IN_PROJECT=0
    WORKON_HOME = {toxworkdir}
skip_install = True
commands_pre =
    pipenv sync --dev
    pipenv --venv


[testenv:stylecheck]
description = Performs style check of the code
commands =
    pipenv run pflake8 {env:PACKAGE_SOURCE_DIR} tests
    pipenv run black {env:PACKAGE_SOURCE_DIR} tests --check
    pipenv run isort {env:PACKAGE_SOURCE_DIR} tests --check-only



[testenv:test]
description = Executes tests
commands =
    pipenv run pytest {posargs}


[testenv:lint]
description = Executes linter
commands =
    pipenv run pylint --output-format=teamcity.pylint_reporter.TeamCityReporter {env:PACKAGE_SOURCE_DIR} tests/ {posargs}


[testenv:{docs,doctests}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
setenv =
    {[testenv]setenv}
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
commands =
    pipenv run sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" -a -W --keep-going


# https://setuptools.pypa.io/en/stable/build_meta.html#how-to-use-it
[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
commands =
    clean: pipenv run python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: pipenv run python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: pipenv run python -m build {posargs}


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
setenv =
    {[testenv]setenv}
    # See: https://twine.readthedocs.io/en/latest/
    TWINE_USERNAME={env:PIPENV_USERNAME}
    TWINE_PASSWORD={env:PIPENV_TOKEN}
    TWINE_REPOSITORY_URL={env:ARTIFACTORY_PYPI_URL}
commands =
    pipenv run python -m twine check dist/*.whl
    pipenv run python -m twine upload {posargs} dist/*.whl